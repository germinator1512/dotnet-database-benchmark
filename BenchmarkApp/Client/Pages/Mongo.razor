@page "/mongo"
@using BenchmarkApp.Shared
@inject HttpClient Http


<h4>Mongo Benchmark</h4>

<div class="margin">
    <div class="margin">
        <button class="btn btn-primary" @onclick="StartNeighbourBenchmark">Start Neighbours Benchmark</button>
        <span> Finding specific user and loading n level of friends (Every User has 10 friends) </span>
    </div>
    <div class="margin">
        <button class="btn btn-primary" @onclick="StartUserBenchmark">Start User Benchmark</button>
        <span> Loading n random users from Database</span>
    </div>
    
    @if (_isLoading)
    {
        <div class="margin">
            <span style="margin-left: 15px"> .. Benchmark is loading, please wait</span>
        </div>
    }

    <div style="height: 15px"> </div>


    @if (_results != null)
    {
        <table class="table">
            <thead>
            <tr>
                <th>Level</th>
                <th>LoadedEntities</th>
                <th>TimeSpan</th>
                <th>Success</th>
            </tr>
            </thead>
            <tbody>
            @foreach (var result in _results)
            {
                <tr>
                    <td>@result.Level</td>
                    <td>@result.LoadedEntities</td>
                    <td>@result.MilliSeconds Milliseconds</td>
                    <td>@result.Success</td>
                </tr>
            }
            </tbody>
        </table>
    }
</div>

@code {

    private IEnumerable<BenchmarkResult> _results;
    private bool _isLoading;

    private async Task StartNeighbourBenchmark()
    {
        _isLoading = true;
        _results = await Http.GetFromJsonAsync<IEnumerable<BenchmarkResult>>("benchmark/mongo/neighbour");
        _isLoading = false;
    }
    
    private async Task StartUserBenchmark()
    {
        _isLoading = true;
        _results = await Http.GetFromJsonAsync<IEnumerable<BenchmarkResult>>("benchmark/mongo/user");
        _isLoading = false;
    }

}